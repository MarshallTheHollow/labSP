@model labSP.Models.MathOutput
@{
    ViewBag.Title = "Answers";
}
<div class="mydiv">
    <h2>Входные данные</h2>
    <table class="mytable">
        <tr>
            <th class="mynotmy">Компоненты сплава </th>
            <th class="mynotmy">Сплав №1</th>
            <th class="mynotmy">Сплав №2</th>
            <th class="mynotmy">Сплав №3</th>
            <th class="mynotmy">Общее кол-во</th>
            <th class="mynotmy">Минимум</th>
            <th class="mynotmy">Максимум</th>
        </tr>
        <tr>
            <th class="mynotmy">Cu</th>
            <th class="mynotmy">@Model.inputs.Alloy[0].Cu</th>
            <th class="mynotmy">@Model.inputs.Alloy[1].Cu</th>
            <th class="mynotmy">@Model.inputs.Alloy[2].Cu</th>
            <th class="mynotmy">@Model.cusum</th>
            <th class="mynotmy">@Model.inputs.Cuvalue.min</th>
            <th class="mynotmy">@Model.inputs.Cuvalue.max</th>
        </tr>
        <tr>
            <th class="mynotmy">Sn</th>
            <th class="mynotmy">@Model.inputs.Alloy[0].Sn</th>
            <th class="mynotmy">@Model.inputs.Alloy[1].Sn</th>
            <th class="mynotmy">@Model.inputs.Alloy[2].Sn</th>
            <th class="mynotmy">@Model.snsum</th>
            <th class="mynotmy">@Model.inputs.Snvalue.min</th>
            <th class="mynotmy">@Model.inputs.Snvalue.max</th>
        </tr>
        <tr>
            <th class="mynotmy">Pb</th>
            <th class="mynotmy">@Model.inputs.Alloy[0].Pb</th>
            <th class="mynotmy">@Model.inputs.Alloy[1].Pb</th>
            <th class="mynotmy">@Model.inputs.Alloy[2].Pb</th>
            <th class="mynotmy">@Model.pbsum</th>
            <th class="mynotmy">@Model.inputs.Pbvalue.min</th>
            <th class="mynotmy">@Model.inputs.Pbvalue.max</th>
        </tr>
        <tr>
            <th class="mynotmy">Zn</th>
            <th class="mynotmy">@Model.inputs.Alloy[0].Zn</th>
            <th class="mynotmy">@Model.inputs.Alloy[1].Zn</th>
            <th class="mynotmy">@Model.inputs.Alloy[2].Zn</th>
            <th class="mynotmy">@Model.znsum</th>
            <th class="mynotmy">@Model.inputs.Znvalue.min</th>
            <th class="mynotmy">@Model.inputs.Znvalue.max</th>
        </tr>
        <tr>
            <th class="mynotmy">Стоимость 1 кг</th>
            <th class="mynotmy">@Model.inputs.Alloy[0].Cost</th>
            <th class="mynotmy">@Model.inputs.Alloy[1].Cost</th>
            <th class="mynotmy">@Model.inputs.Alloy[2].Cost</th>
        </tr>
    </table>

    <h2>Кол-во сплавов</h2>
    @foreach (var elem in Model.answers)
    {
        <h6>Сплав @(Model.answers.IndexOf(elem)+1): @elem кг</h6>
    }
    <h2>Сумма сплавов: @Model.totalweight</h2>
    <h2>Итоговая стоимость: @Model.totalcost</h2>

    <div id="chart_div"></div>

</div>


<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    // Load the Visualization API and the corechart package.
    google.charts.load('current', { 'packages': ['corechart'] });

    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawChart);

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Topping');
        data.addColumn('number', 'Slices');
        data.addRows([
            ['Сплав 1', @Html.Raw(ViewBag.answer1)],
            ['Сплав 2', @Html.Raw(ViewBag.answer2)],
            ['Сплав 3', @Html.Raw(ViewBag.answer3)]
        ]);

        // Set chart options
        var options = {
            'title': 'Сколько кг в каждом сплаве',
            'width': 400,
            'height': 300
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
        chart.draw(data, options);
    }
</script>